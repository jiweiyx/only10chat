version: '3.8'

services:
  # Node.js 应用服务
  app:
    build:
      context: .
      dockerfile: Dockerfile  # 使用当前目录中的 Dockerfile
    container_name: only10chat
    ports:
      - "80:8080"  # 将容器的 8080 端口映射到主机的 80 端口
    depends_on:
      - mongo  # 确保在启动 Node.js 应用之前 MongoDB 已启动
    environment:
      - MONGO_URI=mongodb://mongo:27017/mydatabase  # 连接 MongoDB 的 URI
    volumes:
      - .:/usr/src/app  # 将当前目录挂载到容器中，方便开发时修改代码

  # MongoDB 服务
  mongo:
    image: mongo:6.0.20  # 使用 MongoDB 官方镜像
    container_name: mongo_db
    ports:
      - "27017:27017"  # 将容器的 27017 端口映射到主机的 27017 端口
    volumes:
      - mongo_data:/data/db  # 持久化 MongoDB 数据到宿主机
    restart: always  # 容器停止后自动重启

volumes:
  mongo_data:  # 定义一个持久化数据的卷
