name: Publish Docker Image

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: jiweiyx/only10chat  # 镜像名称，确保这个是正确的

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      # 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 设置 Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2 # 使用稳定版本 v2

      # 登录 Docker 注册表
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2 # 使用最新的稳定版本 v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}  # 使用 GitHub Token 登录

      # 提取 Docker 镜像元数据
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4 # 使用稳定版本 v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # 构建并推送 Docker 镜像
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v2 # 使用最新稳定版本
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 签名发布的 Docker 镜像
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: |
          # 确保 cosign 已安装
          curl -sSL https://github.com/sigstore/cosign/releases/download/v1.10.0/cosign-linux-amd64 -o cosign
          chmod +x cosign
          sudo mv cosign /usr/local/bin/cosign
          
          # 签名操作
          echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
